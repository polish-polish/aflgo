--- ../aflgo-good/afl-fuzz.c	2020-01-03 23:36:43.927622298 +0800
+++ ../aflgo-good-patched/afl-fuzz.c	2020-01-09 02:53:59.003879161 +0800
@@ -3904,6 +3904,22 @@
   s32 fd;
   u8  keeping = 0, res;
 
+  //added in 2019/12/16 by cai start
+  u8 crash_flag = 0;
+  char checkCVE[512];
+  //patched target app path
+  static char patched_file[256];
+
+  if(strstr(patched_file, "-3") == NULL)
+  {
+	  strcpy(patched_file, argv[0]);
+	  char * tmp = strstr(patched_file, "-2");
+	  if(tmp){
+		  *(tmp+1)='3';
+	  }
+  }
+  //added in 2019/12/16 by cai end
+
   if (fault == crash_mode) {
 
     /* Keep only if there are new bits in the map, add to queue for
@@ -4206,35 +4222,10 @@
 #endif /* ^!SIMPLE_FILES */
 
       unique_crashes++;
-      /* add by yangke start */
-      OKF("First Crash is Achieved! Exit now!");
-      u8 * statistic_file_name=alloc_printf("%s/statistics", out_dir);
-      u8 * info=alloc_printf("mon/rand mut_times:%d|%d,%0.2f,win_times,%d|%d\n",monitor_mut,random_mut,(float)monitor_mut/(float)random_mut,monitor_win,random_win);
-      int statistic_file_fd = open(statistic_file_name, O_WRONLY | O_CREAT | O_APPEND, 0600);
-      if (statistic_file_fd < 0) PFATAL("Unable to create '%s'", statistic_file_name);
-      ck_write(statistic_file_fd, info, strlen(info), statistic_file_name);
-      ck_write(statistic_file_fd, mem, len, statistic_file_name);
-      ck_write(statistic_file_fd, "\n", 1, statistic_file_name);
-      close(statistic_file_fd);
-      ck_free(statistic_file_name);
-      ck_free(info);
-      fd = open(fn, O_WRONLY | O_CREAT | O_EXCL, 0600);
-      if (fd < 0) PFATAL("Unable to create '%s'", fn);
-      ck_write(fd, mem, len, fn);
-      close(fd);
-      ck_free(fn);
-      //clean up
-      fclose(plot_file);
-	  destroy_queue();
-	  destroy_extras();
-	  destroy_vertex_index();
-	  destroy_records();
-	  ck_free(target_path);
-	  ck_free(sync_id);
-
-		alloc_report();
-      exit(0);
-      /* add by yangke end */
+
+      //add start cai
+      crash_flag=1;
+      //add end cai
 
       last_crash_time = get_cur_time();
       last_crash_execs = total_execs;
@@ -4255,6 +4246,54 @@
   ck_write(fd, mem, len, fn);
   close(fd);
 
+  //add check CVE start
+    if(crash_flag)
+    {
+		sprintf(checkCVE, "%s < %s > /dev/null", patched_file, fn);
+		WARNF("checkCVE:%s",checkCVE);
+		if(system(checkCVE) == 0){
+			/* add by yangke start */
+			OKF("First Crash is Achieved! Exit now!");
+			u8 * statistic_file_name=alloc_printf("%s/statistics", out_dir);
+			u8 * info=alloc_printf("mon/rand mut_times:%d|%d,%0.2f,win_times,%d|%d\n",monitor_mut,random_mut,(float)monitor_mut/(float)random_mut,monitor_win,random_win);
+			int statistic_file_fd = open(statistic_file_name, O_WRONLY | O_CREAT | O_APPEND, 0600);
+			OKF("A");
+			if (statistic_file_fd < 0) PFATAL("Unable to create '%s'", statistic_file_name);
+			ck_write(statistic_file_fd, info, strlen(info), statistic_file_name);
+			ck_write(statistic_file_fd, mem, len, statistic_file_name);
+			ck_write(statistic_file_fd, "\n", 1, statistic_file_name);
+			OKF("B");
+			close(statistic_file_fd);
+			ck_free(statistic_file_name);
+			ck_free(info);
+			OKF("C");
+			/*fd = open(fn, O_WRONLY | O_CREAT | O_EXCL, 0600);
+			if (fd < 0) PFATAL("Unable to create '%s'", fn);
+			ck_write(fd, mem, len, fn);
+			close(fd);*/
+			ck_free(fn);
+			//clean up
+			fclose(plot_file);
+			destroy_queue();
+			OKF("D");
+			destroy_extras();
+			OKF("E");
+			destroy_vertex_index();
+			OKF("F");
+			destroy_records();
+			OKF("G");
+			ck_free(target_path);
+			ck_free(sync_id);
+
+			alloc_report();
+			exit(0);
+			/* add by yangke end */
+    	}else{
+    	  crash_flag = 0;
+    	}
+    }
+    //add check CVE end
+
   ck_free(fn);
 
   return keeping;
